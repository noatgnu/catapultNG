import{a as d}from"./chunk-OV7F5RRE.js";import{L as h,O as l,ub as m,vb as b}from"./chunk-VG74EQIO.js";var v=(()=>{let r=class r{constructor(e){this.http=e,this.protocol=window.location.protocol,this.baseURL=d.baseURL.replace("http",this.protocol.slice(0,-1))}getExperiments(e){if(e)return this.http.get(e,{observe:"body",responseType:"json"});let t={ordering:"-id"};return this.http.get(`${this.baseURL}/api/experiments`,{observe:"body",responseType:"json",params:t})}getExperiment(e){return this.http.get(`${this.baseURL}/api/experiments/${e}/`,{observe:"body",responseType:"json"})}getVendorChoices(){return this.http.get(`${this.baseURL}/api/experiments/get_vendor_choices`,{observe:"body",responseType:"json"})}updateExperiment(e,t){return this.http.patch(`${this.baseURL}/api/experiments/${e}/`,t,{observe:"body",responseType:"json"})}deleteExperiment(e){return this.http.delete(`${this.baseURL}/api/experiments/${e}/`,{observe:"body",responseType:"json"})}createExperiment(e,t,i){return this.http.post(`${this.baseURL}/api/experiments`,{experiment_name:e,vendor:t,sample_count:i},{observe:"body",responseType:"json"})}searchExperiments(e){return this.http.get(`${this.baseURL}/api/experiments?search=${e}`,{observe:"body",responseType:"json"})}getAssociatedFiles(e){return this.http.get(`${this.baseURL}/api/experiments/${e}/get_associated_files`,{observe:"body",responseType:"json"})}getResultSummaries(e){return this.http.get(`${this.baseURL}/api/experiments/${e}/get_result_summaries`,{observe:"body",responseType:"json"})}};r.\u0275fac=function(t){return new(t||r)(l(b))},r.\u0275prov=h({token:r,factory:r.\u0275fac,providedIn:"root"});let n=r;return n})();var U=(()=>{let r=class r{constructor(e){this.http=e,this.protocol=window.location.protocol,this.baseURL=d.baseURL.replace("http",this.protocol.slice(0,-1))}getAnalyses(e,t=null,i=null,a=null,y=null,o=null){if(e)return this.http.get(e,{observe:"body",responseType:"json"});let s=new m;if(s=s.append("ordering","-id"),t&&(s=s.append("min_precursor",t)),i&&(s=s.append("max_precursor",i)),a&&(s=s.append("min_protein",a)),y&&(s=s.append("max_protein",y)),o){for(let p in o)if(o.hasOwnProperty(p)){if(o[p]===null)continue;if(typeof o[p]=="boolean")s=s.append(p,o[p]?"True":"False");else if(typeof o[p]=="string")s=s.append(p,o[p]);else if(typeof o[p]=="number")s=s.append(p,o[p].toString());else if(Array.isArray(o[p])){if(o[p].length===0)continue;s=s.append(p,o[p].join(","))}else s=s.append(p,o[p])}}return this.http.get(`${this.baseURL}/api/analyses`,{observe:"body",responseType:"json",params:s})}getAnalysis(e){return this.http.get(`${this.baseURL}/api/analyses/${e}/`,{observe:"body",responseType:"json"})}getAnalysisType(){return this.http.get(`${this.baseURL}/api/analyses/get_analysis_types`,{observe:"body",responseType:"json"})}updateAnalysis(e,t){return this.http.patch(`${this.baseURL}/api/analyses/${e}/`,t,{observe:"body",responseType:"json"})}deleteAnalysis(e){return this.http.delete(`${this.baseURL}/api/analyses/${e}/`,{observe:"body",responseType:"json"})}createAnalysis(e,t,i,a,y){return this.http.post(`${this.baseURL}/api/analyses`,{analysis_path:e,experiment:t,analysis_type:i,fasta_file:a,spectral_library:y},{observe:"body",responseType:"json"})}searchAnalyses(e){let t={search:e};return this.http.get(`${this.baseURL}/api/analyses`,{observe:"body",responseType:"json",params:t})}getAssociatedTasks(e){return this.http.get(`${this.baseURL}/api/analyses/${e}/get_associated_tasks`,{observe:"body",responseType:"json"})}queueAnalysis(e){return this.http.post(`${this.baseURL}/api/analyses/${e}/queue_analysis/`,{observe:"body",responseType:"json"})}getResultSummaries(e){return this.http.get(`${this.baseURL}/api/analyses/${e}/get_result_summaries/`,{observe:"body",responseType:"json"})}};r.\u0275fac=function(t){return new(t||r)(l(b))},r.\u0275prov=h({token:r,factory:r.\u0275fac,providedIn:"root"});let n=r;return n})();export{v as a,U as b};
